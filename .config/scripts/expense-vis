#!/usr/bin/python
import numpy as np
from wordcloud import WordCloud
from collections import defaultdict
import pandas as pd
from datetime import datetime
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
sns.set()

file_loc = '~/priv/expense/expenses.csv'

typeofexp = \
{
    'Groceries': [
        'Willys', 
        'ICA Folkes Livs', 
        'Lidl', 
        'ICA Supermarket City',
        'ICA Vast',
        'ICA City',
        'ICA Hornan',
        'ICA Luthagens Livs',
        'Laura Livs'
    ], 
    'Housing': ['Uppsala Housing'],
    'Transport': [
        'UL Center',
        'Returcyklar',
        'Swedavia Airports'
    ],
    'Eating-out': [
        'Lilla Husset',
        'Caf Angstrom (uu)',
        'Kafferummet Storken',
        'Norrlands Nation',
        'Systembolaget',
        'systembolaget'
    ],
    'Education': [
        'Uppsala Universitet',
        'English Bookshop'
    ],
    'Furniture': [
        'Ikea',
        'Dollarstore',
        'DollarStore',
        'Clas Ohlson',
        'Carl Ohlsson',
        'Clas ohlson'
    ],
    'Health': ['Apotek', 'Normal']
}

num2month = {1: 'January', 2: 'February', 3: 'March', 4: 'April', 5: 'May', 6: 'June',
        7: 'July', 8: 'August', 9: 'September', 10: 'October', 11: 'November', 12: 'December'}

tp = []
typeof = {}
for k, v in typeofexp.items():
    for loc in v:
        tp.append([k, loc])
        typeof[loc] = k
        
typeofexp_df = pd.DataFrame(tp, columns=['Type', 'Seller'])

def group_by_seller(data):
    return data[['seller','total_price']].groupby(by='seller').sum().sort_values(by='total_price',ascending=False)

df = pd.read_csv(file_loc)
df['date'] = pd.to_datetime(df['date'])

fig, axes = plt.subplots(2,2)
axes = axes.flatten()
fig.suptitle(f'Total: {round(df.total_price.sum())} SEK')

### 4
def word_cloud(data):
    d = defaultdict(int)
    for _, row in data[['product', 'total_price']].iterrows():
        d[row['product'].lower()] += row['total_price']
    bprice = sum([v for k, v in d.items() if 'beer' in k])

    del d['all']
    for k in list(d.keys()):
        if 'beer' in k:
            del d[k]
    d['beer'] = bprice
    
    wordcloud = WordCloud(background_color='white')
    wordcloud.generate_from_frequencies(frequencies=d)
    return wordcloud

wc = word_cloud(df)
axes[0].imshow(wc)
axes[0].axis('off')
axes[0].set_title('Products')

# df_sellers = group_by_seller(df)[1:7]
# sns.barplot(x='seller', y='total_price', data=df_sellers.reset_index(), ax=axes[0])
# axes[0].set_ylabel('SEK')
# axes[0].set_title(f'By Seller')

### 2
df['month'] = df.date.dt.month
df_month = df.groupby(by='month').sum()
gm = sns.barplot([num2month[i] for i in df_month.index], df_month.total_price, ax=axes[1])
gm.axhline(sum(df_month.total_price)/len(df_month.total_price))
axes[1].set_title('Monthly')
axes[1].set_ylabel('SEK')

### 1
df['week'] = df.date.dt.isocalendar().week
df_week = df[df.seller != 'Uppsala Housing'].groupby(by='week').sum()
gw = sns.barplot(df_week.index[2:], df_week.total_price[2:], ax=axes[2])
gw.axhline(sum(df_week.total_price[2:])/len(df_week.total_price[2:]))
axes[2].set_ylabel('SEK')
axes[2].set_xlabel('Week')
axes[2].set_title('Weekly')

### 3
def get_type(row):
    if row.seller in typeof.keys():
        return typeof[row.seller]
    else:
        return 'Other'

df['type'] = df.apply(get_type, axis=1)
df_type = df.groupby(by='type').sum().sort_values('total_price', ascending=False)
axes[3] = plt.pie(df_type.total_price, labels=df_type.index)
# axes[3].set_title('Expense Type')

plt.show()
